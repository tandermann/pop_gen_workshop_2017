#!/bin/bash

#Laurent Excoffier February 2013
#
# The script will launch several jobs of fastsimcoal2 to estimate
# demographic parameters from the SFS, using a each time using a
# conditional maximization (ECM) of the parameter likelihood
# This should run on any kind of SFS files generated byfastsimcoal
#
# It assumes the following structure of the observed sfs files:
#	scriptDir
#   	|
#   	|- - - targetDir ("genericName")
#   				|
#   				- *.est file
#   				- *.tpl file
#   				- *.obs files
#   				- fastsimcoal2
#

fsc=fsc25
jobcount=0
msgs=conOutputs

#-------- Number of different runs per data set ------
numRuns=3
runBase=1 
#-----------------------------

mkdir $msgs 2>/dev/null

#-------- Default run values ------
iniNumSims=100000                 #-n command line option
maxNumSims=100000                 #-N command line option
minNumCycles=10                   #-l command line option
maxNumCycles=40                   #-L command line option
stopCrit=0.001                    #-M command line option
minValidSFSEntry=1                #-C command line option

#-------- Ascertainment ------
withAscertainment=0
ascPop=0                          #-a command line option
ascSize=2                         #-A command line option
#-----------------------------
useMonoSites="" 
#useMonoSites="-0"                #-0 command line option
#----------multiSF------------
multiSFS=""
#multiSFS="--multiSFS"            #--multiSFS command line option
#-----------------------------

#-------- Generic Name ------
genericName=1PopBot20Mb
tplGenericName=1PopBot20Mb
estGenericName=1PopBot20Mb
#-----------------------------

for dirs in $genericName
do
	#Check that dirs is a directory
	if [ -d "$dirs" ];	then
		cd $dirs
			echo "Main directory : $dirs"
			estFile=$estGenericName.est
			tplFile=$tplGenericName.tpl     
			for (( runsDone=$runBase; runsDone<=$numRuns; runsDone++ ))
			do
				runDir="run$runsDone"
				mkdir $runDir 2>/dev/null
				echo "--------------------------------------------------------------------"
				echo ""
				echo "Currrent file: $subDirs $runDir"
				echo ""
				cd $runDir
				#Copying necessary files
				cp ../$fsc .
				cp ../$tplFile .
				cp ../$estFile .
				cp ../*.obs .
				#Renaming files for consistency
				mv $tplFile ${genericName}.tpl 2>/dev/null
				mv $estFile ${genericName}.est 2>/dev/null

				let jobcount=jobcount+1
				jobName=${genericName}${jobcount}.sh

				#Creating bash file on the fly
				(
				echo "#!/bin/bash"
				echo ""
				echo "#$ -cwd"
				echo ""
				echo "# specify resources needed"
				echo "#$ -l h_cpu=500:00:00"
				echo ""
				echo "#$ -N j1P_${jobcount}"
				echo "#$ -o ../../../$msgs/1P_$runsDone.out"
				echo "#$ -e ../../../$msgs/1P_$runsDone.err"
				echo "#$ -m a"
				echo "#$ -q all.q"
				echo ""
				echo "#chmod +x ./$fsc"
				echo ""
				echo "echo \"Analysis of file $files\""
				echo "#Computing likelihood of the parameters using the ECM-Brent algorithm"
				echo "echo \"\""
				if [ $withAscertainment -eq 1 ] ; then									  
					echo "echo \"./$fsc -t ${genericName}.tpl -n $iniNumSims -N $maxNumSims -d -e ${genericName}.est  -M $stopCrit -l $minNumCycles -L $maxNumCycles -a${ascPop} -A${ascSize} -q ${useMonoSites} ${multiSFS}\""
					echo "./$fsc -t ${genericName}.tpl -n $iniNumSims -N $maxNumSims -d -e ${genericName}.est -M $stopCrit -l $minNumCycles -L $maxNumCycles -a${ascPop} -A${ascSize} -q ${useMonoSites} ${multiSFS}"                           
				else
					echo "echo \"./$fsc -t ${genericName}.tpl -n $iniNumSims -N $maxNumSims -d -e ${genericName}.est -M $stopCrit -l $minNumCycles -L $maxNumCycles -q ${useMonoSites} ${multiSFS}\""
					echo "./$fsc -t ${genericName}.tpl -n $iniNumSims -N $maxNumSims -d -e ${genericName}.est -M $stopCrit -l $minNumCycles -L $maxNumCycles -q ${useMonoSites} ${multiSFS}"                           
				fi
				echo ""
				echo "echo \"\""
				echo "rm ./$fsc"
				echo "echo \"Job $jobcount terminated\""
				) > $jobName
				chmod +x $jobName

				echo "Bash file $jobName created"
				qsub ./${jobName}
				#./${jobName}
				cd .. #$runDir
			done
		cd .. #dirs
	fi
done





